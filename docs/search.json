[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Quarto first example",
    "section": "",
    "text": "Each time you want to create a new blog post:\n\nCreate a new directory inside the posts folder with your post name\nAdd an index.qmd file inside this directory\nAdd any related resources (images, data) in the same directory\nWrite your content using Markdown, code chunks, and LaTeX\nRender and preview locally with quarto preview\nBuild the site with quarto render\nCommit and push changes to GitHub\n\n\n\n\nA comprehensive guide can be found here.\nHere is some simple text. You can\n\nuse very differnt styles: italics, bold, verbatim, super/subscripts, strikethrough, etc.\nMake headings: using #. Using more #’s makes the headings smaller.\nCreate differnt types of lists and task checkers; NB: You need a blank line before the list to be rendered as such;\nUse footnotes: this is possible like this;1\nUse tables;\n\n\n\n\nYou can do many things with mathematics.\n\nInline math: \\(x = y\\).\nMath block: \\[ e^{i \\pi} = 1\\]\n\nyada yada\n\\[\\begin{equation}\n\\boxed{\n\\frac{f(x)}{\\mathbfcal{H}(y)} = \\int_a^b h(z, x, y)dz\n}\n\\end{equation}\\]\nYou can also define custom latex macros by using hidden blocks as follows:\n\n\\[\n\\def\\RR{{\\bf R}}\n\\def\\bold#1{{\\bf #1}}\n\\def\\fr#1#2{{\\frac{#1}{#2}}}\n\\]\n\n\\(\\RR\\) \\(\\bold x\\) \\(\\fr a b\\) \\(\\mathbf{x}\\)\n\n\nTheorems are commonly used in articles and books in mathematics. To include a reference-able theorem, create a div with a #thm- label (or one of other theorem-type labels described here). You also need to specify a theorem name either via the first heading in the block. You can include any content you like within the div. For example:\n\nTheorem 1 (Line) The equation of any straight line, called a linear equation, can be written as:\n\\[\ny = mx + b\n\\]\n\nSee Theorem 1.\n\nLemma 1 (Some lemma) Statement\n\n\nthe proof\n\n\n\n\nProvide an #eq- label immediately after an equation to make it referenceable. For example:\nBlack-Scholes (Equation 1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[\n\\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2}\n\\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm S^2}\n  + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =\n  \\mathrm r \\mathrm C\n\\tag{1}\\]\n\nRemark 1. Numbers on equations appear if you include a label (same for theorems, lemas, etc..).\n\n\n\n\nTo reference a section, add a #sec- identifier to any heading.\nNote that when using section cross-references, you will also need to enable the number-sections option (so that section numbering is visible to readers). For example:\n---\ntitle: \"My Document\"\nnumber-sections: true\n---\n\n\n\n\nAgain, use the code shortcut to trigger different options. Hereby we see some:\nSimple code block\nCode example\nInline code\ncode example\nFenced code block: here you can specify the programming language:\nPython\nx = 3\nfor i in range(x):\n    print(i) \nC#\nvar x = 3\nfor(int i = 0; i &lt; x; i++)\n{\n    Console.WriteLine(i)\n}\nDefault language: Pandoc supports syntax highlighting for over 140 different languages. If your language is not supported then you can use the default language to get a similar visual treatment:\nyada yada\nExecutable code block: Not that many are currently supported but Python is.\n\n\nShow the code\nx = 3\nfor i in range(x):\n    print(i, end=' ') \n\n\n0 1 2 \n\n\nYou can even run some external program. In this example, let us run code.py:\n\n\nexample.py\n\nx = 3\nfor i in range(x):\n    print(i, end=' ') \n\nWe can also go to a new page as follows: \n\n\nCode blocks and executable code cells in Quarto can include line-based annotations. Line-based annotations provide a way to attach explanation to lines of code much like footnotes.\nAnnotations for a code cell consist of two related elements:\n\nEach annotated line should be terminated with a comment (using the code cell’s language comment character) followed by a space and then an annotation number enclosed in angle brackets (e.g. # &lt;2&gt;). You may repeat an annotation number if the annotation spans multiple lines.\nAn ordered list that appears immediately after the code cell which includes the contents of each annotation. Each numbered item in the ordered list will correspond to the line(s) of code with the same annotation number.\n\ndef compute_triangle_area(base, height):\n1    assert(isinstance(base, [float, int])), f\"base should be of type float, but got a {type(base)} type\"\n    assert(isinstance(height, [float, int])), f\" height should be of type float, but got a {type(height)} type\"\n2    return base * height\n\n1\n\nChecks if both base and height are of type int or float, throws an error otherwise.\n\n2\n\nReturns the triangle area: \\(A = b \\times h\\).\n\n\n\n\n\n\nRaw content can be included directly without Quarto parsing it using Pandoc’s raw attribute. Here is an example of an HTML block\n\nYou can also add inline raw content like this: Here’s some raw inline HTML: html\n\n\n\nSee here.\n\n\n\nSee here\n\n\n\nQuarto has native support for embedding Mermaid and Graphviz diagrams. This enables you to create flowcharts, sequence diagrams, state diagrams, Gantt charts, and more using a plain text syntax inspired by markdown.\nFor example, here we embed a flowchart created using Mermaid:\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\n\n\n\n\nYou can include videos in documents using the as follows  Videos can refer to video files (e.g. MPEG) or can be links to videos published on YouTube, Vimeo, or Brightcove.\n\n\n\nYou can add classes, attributes, and other identifiers to regions of content using Divs and Spans. Although the terms Div and Span originate in HTML, the syntax is used in Quarto across output formats. For example, Callout Blocks are specified using the div syntax, and Small Caps are specified using the span syntax, and both work for many formats beyond HTML. You may also use CSS and/or a Filter along with Divs and Spans to provide styling or other behavior within rendered documents beyond what Quarto provides.\n\n\nFor example, here we add the “border” class to a region of content using a div (:::):\nDivs start with a fence containing at least three consecutive colons plus some attributes. The attributes may optionally be followed by another string of consecutive colons. The Div ends with another line containing a string of at least three consecutive colons. The Div should be separated by blank lines from preceding and following blocks. Divs may also be nested. For example\n\n\nHere is a warning.\n\nMore content.\n\n\nThis content can be styled with a border\n\n\n\n\nA bracketed sequence of inlines, as one would use to begin a link, will be treated as a Span with attributes if it is followed immediately by attributes:\nThis is some text\nTo create text in small caps, that is underlined, or that is highlighted, use a span with one of the classes .smallcaps, .underline or .mark respectively.\nThis text is smallcaps\nThis text is underlined\nThis text is highlighted\n\n\n\n\nCallouts are an excellent way to draw extra attention to certain concepts, or to more clearly indicate that certain content is supplemental or applicable to only some scenarios.\nThere are five different types of callouts available.\n\nnote\nwarning\nimportant\ntip\ncaution\n\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is a callout with a title.\n\n\n\n\n\n\n\n\nExpand To Learn About Collapse**\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default.\n\n\n\nYou can customize the style of these callout blocks.\n\n\n\n\n\n\nPay Attention\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n\n\nYou can also remove the icon if you want\n\n\n\n\n\n\nPay Attention\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n\n\nFinally, you can cross reference blocks using the customary @\n\n\n\n\n\n\nTip 1: Cross-Referencing a Tip\n\n\n\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 1…\n\nPrefixes for callout cross-references\n\n\nCallout Type\nPrefix\n\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-\n\n\n\n\n\n\nThere are some shortcuts thta make writing in Quarto faster;\n\n\nHere is a list of words that you can type on the keyboard to trigger different functionalities (via autocompletion):\n\nlist: to create one ordered (with numbers) or not (with dots);\ncode: to trigger anything code-related;\nitalic: to trigger italic mode;\nbold: to trigger bold;\nstrikethrough: to trigger something like this;\n\n\n\n\n\n\n\n\n\n\nCustom shortcuts to complete\n\n\n\n\n\nTo Do!\n\n\n\n\n\n\n\n\n\nQuarto supports brand.yml—a single YAML file that can be used to customize the appearance of your documents across multiple formats. This is particularly useful for organizations that need a unified look across various formats.\nAn example\ncolor:\n  palette:\n    dark-grey: \"#222222\"\n    blue: \"#ddeaf1\"\n  background: blue\n  foreground: dark-grey\n  primary: black\n\nlogo: \n  medium: logo.png\n\ntypography:\n  fonts:\n    - family: Jura\n      source: google\n  base: Jura\n  headings: Jura\nThe elements of brand.yml are specified in the documentation for the brand.yml project. In this section, learn how these elements are used in Quarto.\n\n\n\nUse color to define your brand’s color palette and map your palette to the roles colors play, a.k.a semantic colors. A simple example might define the value background to a light blue:\ncolor:\n  background: \"#ddeaf1\"\n\n\n\nYou can place content within the right margin of Quarto document. For example, here we use the .column-margin class to place an image in the margin:\n\\[\ne^{i\\pi} = 1\n\\]\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\): \\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]\nClearly, this can be done with images as well.\n\n\n\nFigures that you create using code cells can be placed in the margin by using the column: margin code cell option. If the code produces more than one figure, each of the figures will be placed in the margin.\n#| label: fig-mtcars\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| column: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')```\n\n\n\nFootnotes and the bibliography typically appear at the end of the document, but you can choose to have them placed in the margin by setting the following option1 in the document front matter:\n---\nreference-location: margin\ncitation-location: margin\n---\nWith these options set, footnotes and citations will (respectively) be automatically be placed in the margin of the document rather than the bottom of the page. As an example, when I cite Xie, Allaire, and Grolemund (2018), the citation bibliography entry itself will now appear in the margin.\n\n\n\nAsides allow you to place content aside from the content it is placed in. Asides look like footnotes, but do not include the footnote mark (the superscript number). This is a span that has the class aside which places it in the margin without a footnote number.\n\n\n\nFor figures and tables, you may leave the content in the body of the document while placing the caption in the margin of the document. Using cap-location: margin in a code cell or document front matter to control this. For example:\n#| label: fig-cap-margin\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| cap-location: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\nIn addition to global and code cell specific options, you may use divs with layout classes (prefixed with .column-) to arrange content into columns:\n\n\nThis content will appear in the margin!\n\n\n\n\n\nRPython\n\n\nfizz_buzz &lt;- function(fbnums = 1:50) {\n  output &lt;- dplyr::case_when(\n    fbnums %% 15 == 0 ~ \"FizzBuzz\",\n    fbnums %% 3 == 0 ~ \"Fizz\",\n    fbnums %% 5 == 0 ~ \"Buzz\",\n    TRUE ~ as.character(fbnums)\n  )\n  print(output)\n}\n\n\ndef fizz_buzz(num):\n  if num % 15 == 0:\n    print(\"FizzBuzz\")\n  elif num % 5 == 0:\n    print(\"Buzz\")\n  elif num % 3 == 0:\n    print(\"Fizz\")\n  else:\n    print(num)\n\n\n\n\n\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles. To use this capability, you will need:\n\nA quarto document formatted with citations (see Citation Markdown).\nA bibliographic data source, for example a BibLaTeX (.bib) or BibTeX (.bibtex) file.\nOptionally, a CSL file which specifies the formatting to use when generating the citations and bibliography (when not using natbib or biblatex to generate the bibliography).\n\nIn the front, just add bibliography: references.bib."
  },
  {
    "objectID": "posts/welcome/index.html#what-can-you-do",
    "href": "posts/welcome/index.html#what-can-you-do",
    "title": "Quarto first example",
    "section": "",
    "text": "Each time you want to create a new blog post:\n\nCreate a new directory inside the posts folder with your post name\nAdd an index.qmd file inside this directory\nAdd any related resources (images, data) in the same directory\nWrite your content using Markdown, code chunks, and LaTeX\nRender and preview locally with quarto preview\nBuild the site with quarto render\nCommit and push changes to GitHub\n\n\n\n\nA comprehensive guide can be found here.\nHere is some simple text. You can\n\nuse very differnt styles: italics, bold, verbatim, super/subscripts, strikethrough, etc.\nMake headings: using #. Using more #’s makes the headings smaller.\nCreate differnt types of lists and task checkers; NB: You need a blank line before the list to be rendered as such;\nUse footnotes: this is possible like this;1\nUse tables;\n\n\n\n\nYou can do many things with mathematics.\n\nInline math: \\(x = y\\).\nMath block: \\[ e^{i \\pi} = 1\\]\n\nyada yada\n\\[\\begin{equation}\n\\boxed{\n\\frac{f(x)}{\\mathbfcal{H}(y)} = \\int_a^b h(z, x, y)dz\n}\n\\end{equation}\\]\nYou can also define custom latex macros by using hidden blocks as follows:\n\n\\[\n\\def\\RR{{\\bf R}}\n\\def\\bold#1{{\\bf #1}}\n\\def\\fr#1#2{{\\frac{#1}{#2}}}\n\\]\n\n\\(\\RR\\) \\(\\bold x\\) \\(\\fr a b\\) \\(\\mathbf{x}\\)\n\n\nTheorems are commonly used in articles and books in mathematics. To include a reference-able theorem, create a div with a #thm- label (or one of other theorem-type labels described here). You also need to specify a theorem name either via the first heading in the block. You can include any content you like within the div. For example:\n\nTheorem 1 (Line) The equation of any straight line, called a linear equation, can be written as:\n\\[\ny = mx + b\n\\]\n\nSee Theorem 1.\n\nLemma 1 (Some lemma) Statement\n\n\nthe proof\n\n\n\n\nProvide an #eq- label immediately after an equation to make it referenceable. For example:\nBlack-Scholes (Equation 1) is a mathematical model that seeks to explain the behavior of financial derivatives, most commonly options:\n\\[\n\\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2}\n\\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm S^2}\n  + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =\n  \\mathrm r \\mathrm C\n\\tag{1}\\]\n\nRemark 1. Numbers on equations appear if you include a label (same for theorems, lemas, etc..).\n\n\n\n\nTo reference a section, add a #sec- identifier to any heading.\nNote that when using section cross-references, you will also need to enable the number-sections option (so that section numbering is visible to readers). For example:\n---\ntitle: \"My Document\"\nnumber-sections: true\n---\n\n\n\n\nAgain, use the code shortcut to trigger different options. Hereby we see some:\nSimple code block\nCode example\nInline code\ncode example\nFenced code block: here you can specify the programming language:\nPython\nx = 3\nfor i in range(x):\n    print(i) \nC#\nvar x = 3\nfor(int i = 0; i &lt; x; i++)\n{\n    Console.WriteLine(i)\n}\nDefault language: Pandoc supports syntax highlighting for over 140 different languages. If your language is not supported then you can use the default language to get a similar visual treatment:\nyada yada\nExecutable code block: Not that many are currently supported but Python is.\n\n\nShow the code\nx = 3\nfor i in range(x):\n    print(i, end=' ') \n\n\n0 1 2 \n\n\nYou can even run some external program. In this example, let us run code.py:\n\n\nexample.py\n\nx = 3\nfor i in range(x):\n    print(i, end=' ') \n\nWe can also go to a new page as follows: \n\n\nCode blocks and executable code cells in Quarto can include line-based annotations. Line-based annotations provide a way to attach explanation to lines of code much like footnotes.\nAnnotations for a code cell consist of two related elements:\n\nEach annotated line should be terminated with a comment (using the code cell’s language comment character) followed by a space and then an annotation number enclosed in angle brackets (e.g. # &lt;2&gt;). You may repeat an annotation number if the annotation spans multiple lines.\nAn ordered list that appears immediately after the code cell which includes the contents of each annotation. Each numbered item in the ordered list will correspond to the line(s) of code with the same annotation number.\n\ndef compute_triangle_area(base, height):\n1    assert(isinstance(base, [float, int])), f\"base should be of type float, but got a {type(base)} type\"\n    assert(isinstance(height, [float, int])), f\" height should be of type float, but got a {type(height)} type\"\n2    return base * height\n\n1\n\nChecks if both base and height are of type int or float, throws an error otherwise.\n\n2\n\nReturns the triangle area: \\(A = b \\times h\\).\n\n\n\n\n\n\nRaw content can be included directly without Quarto parsing it using Pandoc’s raw attribute. Here is an example of an HTML block\n\nYou can also add inline raw content like this: Here’s some raw inline HTML: html\n\n\n\nSee here.\n\n\n\nSee here\n\n\n\nQuarto has native support for embedding Mermaid and Graphviz diagrams. This enables you to create flowcharts, sequence diagrams, state diagrams, Gantt charts, and more using a plain text syntax inspired by markdown.\nFor example, here we embed a flowchart created using Mermaid:\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\n\n\n\n\nYou can include videos in documents using the as follows  Videos can refer to video files (e.g. MPEG) or can be links to videos published on YouTube, Vimeo, or Brightcove.\n\n\n\nYou can add classes, attributes, and other identifiers to regions of content using Divs and Spans. Although the terms Div and Span originate in HTML, the syntax is used in Quarto across output formats. For example, Callout Blocks are specified using the div syntax, and Small Caps are specified using the span syntax, and both work for many formats beyond HTML. You may also use CSS and/or a Filter along with Divs and Spans to provide styling or other behavior within rendered documents beyond what Quarto provides.\n\n\nFor example, here we add the “border” class to a region of content using a div (:::):\nDivs start with a fence containing at least three consecutive colons plus some attributes. The attributes may optionally be followed by another string of consecutive colons. The Div ends with another line containing a string of at least three consecutive colons. The Div should be separated by blank lines from preceding and following blocks. Divs may also be nested. For example\n\n\nHere is a warning.\n\nMore content.\n\n\nThis content can be styled with a border\n\n\n\n\nA bracketed sequence of inlines, as one would use to begin a link, will be treated as a Span with attributes if it is followed immediately by attributes:\nThis is some text\nTo create text in small caps, that is underlined, or that is highlighted, use a span with one of the classes .smallcaps, .underline or .mark respectively.\nThis text is smallcaps\nThis text is underlined\nThis text is highlighted\n\n\n\n\nCallouts are an excellent way to draw extra attention to certain concepts, or to more clearly indicate that certain content is supplemental or applicable to only some scenarios.\nThere are five different types of callouts available.\n\nnote\nwarning\nimportant\ntip\ncaution\n\n\n\n\n\n\n\nNote\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\n\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is a callout with a title.\n\n\n\n\n\n\n\n\nExpand To Learn About Collapse**\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user. You can use collapse=\"true\" to collapse it by default or collapse=\"false\" to make a collapsible callout that is expanded by default.\n\n\n\nYou can customize the style of these callout blocks.\n\n\n\n\n\n\nPay Attention\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n\n\nYou can also remove the icon if you want\n\n\n\n\n\n\nPay Attention\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n\n\nFinally, you can cross reference blocks using the customary @\n\n\n\n\n\n\nTip 1: Cross-Referencing a Tip\n\n\n\nAdd an ID starting with #tip- to reference a tip.\n\n\nSee Tip 1…\n\nPrefixes for callout cross-references\n\n\nCallout Type\nPrefix\n\n\n\n\nnote\n#nte-\n\n\ntip\n#tip-\n\n\nwarning\n#wrn-\n\n\nimportant\n#imp-\n\n\ncaution\n#cau-\n\n\n\n\n\n\nThere are some shortcuts thta make writing in Quarto faster;\n\n\nHere is a list of words that you can type on the keyboard to trigger different functionalities (via autocompletion):\n\nlist: to create one ordered (with numbers) or not (with dots);\ncode: to trigger anything code-related;\nitalic: to trigger italic mode;\nbold: to trigger bold;\nstrikethrough: to trigger something like this;\n\n\n\n\n\n\n\n\n\n\nCustom shortcuts to complete\n\n\n\n\n\nTo Do!\n\n\n\n\n\n\n\n\n\nQuarto supports brand.yml—a single YAML file that can be used to customize the appearance of your documents across multiple formats. This is particularly useful for organizations that need a unified look across various formats.\nAn example\ncolor:\n  palette:\n    dark-grey: \"#222222\"\n    blue: \"#ddeaf1\"\n  background: blue\n  foreground: dark-grey\n  primary: black\n\nlogo: \n  medium: logo.png\n\ntypography:\n  fonts:\n    - family: Jura\n      source: google\n  base: Jura\n  headings: Jura\nThe elements of brand.yml are specified in the documentation for the brand.yml project. In this section, learn how these elements are used in Quarto.\n\n\n\nUse color to define your brand’s color palette and map your palette to the roles colors play, a.k.a semantic colors. A simple example might define the value background to a light blue:\ncolor:\n  background: \"#ddeaf1\"\n\n\n\nYou can place content within the right margin of Quarto document. For example, here we use the .column-margin class to place an image in the margin:\n\\[\ne^{i\\pi} = 1\n\\]\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\): \\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]\nClearly, this can be done with images as well.\n\n\n\nFigures that you create using code cells can be placed in the margin by using the column: margin code cell option. If the code produces more than one figure, each of the figures will be placed in the margin.\n#| label: fig-mtcars\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| column: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')```\n\n\n\nFootnotes and the bibliography typically appear at the end of the document, but you can choose to have them placed in the margin by setting the following option1 in the document front matter:\n---\nreference-location: margin\ncitation-location: margin\n---\nWith these options set, footnotes and citations will (respectively) be automatically be placed in the margin of the document rather than the bottom of the page. As an example, when I cite Xie, Allaire, and Grolemund (2018), the citation bibliography entry itself will now appear in the margin.\n\n\n\nAsides allow you to place content aside from the content it is placed in. Asides look like footnotes, but do not include the footnote mark (the superscript number). This is a span that has the class aside which places it in the margin without a footnote number.\n\n\n\nFor figures and tables, you may leave the content in the body of the document while placing the caption in the margin of the document. Using cap-location: margin in a code cell or document front matter to control this. For example:\n#| label: fig-cap-margin\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| cap-location: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\nIn addition to global and code cell specific options, you may use divs with layout classes (prefixed with .column-) to arrange content into columns:\n\n\nThis content will appear in the margin!\n\n\n\n\n\nRPython\n\n\nfizz_buzz &lt;- function(fbnums = 1:50) {\n  output &lt;- dplyr::case_when(\n    fbnums %% 15 == 0 ~ \"FizzBuzz\",\n    fbnums %% 3 == 0 ~ \"Fizz\",\n    fbnums %% 5 == 0 ~ \"Buzz\",\n    TRUE ~ as.character(fbnums)\n  )\n  print(output)\n}\n\n\ndef fizz_buzz(num):\n  if num % 15 == 0:\n    print(\"FizzBuzz\")\n  elif num % 5 == 0:\n    print(\"Buzz\")\n  elif num % 3 == 0:\n    print(\"Fizz\")\n  else:\n    print(num)\n\n\n\n\n\n\nQuarto will use Pandoc to automatically generate citations and a bibliography in a number of styles. To use this capability, you will need:\n\nA quarto document formatted with citations (see Citation Markdown).\nA bibliographic data source, for example a BibLaTeX (.bib) or BibTeX (.bibtex) file.\nOptionally, a CSL file which specifies the formatting to use when generating the citations and bibliography (when not using natbib or biblatex to generate the bibliography).\n\nIn the front, just add bibliography: references.bib."
  },
  {
    "objectID": "posts/welcome/index.html#footnotes",
    "href": "posts/welcome/index.html#footnotes",
    "title": "Quarto first example",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHere is a footnote.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "aletras' blog",
    "section": "",
    "text": "Quarto first example\n\n\n\nquarto\n\ntutorial\n\n\n\nI experiment and and learn (some) stuff that quarto can do, from math to code, from images to tables, etc…\n\n\n\n\n\nMay 8, 2025\n\n\nAlessandro Trasatti\n\n\n\n\n\nNo matching items"
  }
]